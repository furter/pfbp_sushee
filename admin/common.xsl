<?xml version="1.0" encoding="utf-8"?><xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" version="1.0">	<xsl:output method="xml" indent="yes" encoding="utf-8" doctype-public="-//W3C//DTD XHTML 1.0 Transitional//EN" doctype-system="http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd" omit-xml-declaration="yes"/>	<!-- -->	<!-- paramètres utiles partout -->	<xsl:param name="majuscules">ABCDEFGHIJKLMNOPQRSTUVWXYZÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏÐÑÒÓÔÕÖØÙÚÛÜÝÞ</xsl:param>	<xsl:param name="minuscules">abcdefghijklmnopqrstuvwxyzàáâãäåæçèéêëìíîïðñòóôõöøùúûüýþ</xsl:param>	<xsl:param name="sans_accent">abcdefghijklmnopqrstuvwxyzaaaaaaæceeeeiiiidnoooooouuuuyp</xsl:param>	<xsl:param name="apos">		<xsl:text>'</xsl:text>	</xsl:param>	<xsl:param name="new_apos">		<xsl:text>’</xsl:text>	</xsl:param>	<xsl:param name="public">http://pfb.officity.com/admin/</xsl:param>	<xsl:param name="files" select="/RESPONSE/NECTIL/files_url"/>	<xsl:param name="months" select="/RESPONSE/MONTHS"/>	<xsl:param name="website" select="/RESPONSE/RESULTS[@name='website']/MEDIA"/>	<xsl:param name="media" select="/RESPONSE/RESULTS[@name='media']/MEDIA"/>	<xsl:param name="data" select="/RESPONSE/RESULTS[@name='data']/MEDIA"/>	<xsl:param name="ID" select="/RESPONSE/URL/ID"/>	<!-- -->	<!-- entête html -->	<xsl:template name="attribute_html">		<xsl:attribute name="lang">			<xsl:value-of select="//RESULTS/LANGUAGE[@ID = //NECTIL/language]/ISO1"/>		</xsl:attribute>	</xsl:template>	<xsl:template name="html_head">		<meta name="description" content="{$website/DESCRIPTIONS/DESCRIPTION/CUSTOM/METADESCRIPTION}"/>		<meta name="keywords">			<xsl:attribute name="content">				<xsl:apply-templates select="$website" mode="title"/>				<xsl:if test="$website/@ID != $media/@ID">					<xsl:text> &gt; </xsl:text>					<xsl:apply-templates select="$media" mode="title"/>				</xsl:if>				<xsl:text> - </xsl:text>				<xsl:for-each select="$website/DESCRIPTIONS/DESCRIPTION/CUSTOM/METAKEYWORD">					<xsl:value-of select="."/>					<xsl:if test="position() != last()">						<xsl:text> - </xsl:text>					</xsl:if>				</xsl:for-each>			</xsl:attribute>		</meta>		<meta name="date" content="{/RESPONSE/URL/today}"/>		<meta name="content-language" content="{/RESPONSE/NECTIL/language}"/>		<meta name="language" content="{/RESPONSE/NECTIL/language}"/>		<meta name="dateofLastModification" content="{$media/INFO/MODIFICATIONDATE}"/>		<meta name="robots" content="index,follow"/>		<meta name="googlebot" content="index,follow"/>		<meta name="content-type" content="text/html"/>		<title>			<xsl:apply-templates select="$website" mode="title"/>			<xsl:if test="$media and $website/@ID != $media/@ID">				<xsl:text> - </xsl:text>				<xsl:apply-templates select="$media" mode="title"/>			</xsl:if>		</title>		<link rel="stylesheet" type="text/css" href="styles.css"/>		<script type="text/javascript" src="script.js"> </script>		<script type="text/javascript" src="{//NECTIL/kernel_url}Library/js/jquery/jquery.min.js"> </script>		<link rel="icon" href="" type="image/x-icon"/>	</xsl:template>	<!-- -->	<!-- ajout d'attribut au body -->	<xsl:template match="MEDIA" mode="attribute">		<xsl:attribute name="class">			<xsl:value-of select="INFO/MEDIATYPE"/>		</xsl:attribute>	</xsl:template>	<xsl:template match="MEDIA[INFO/PAGETOCALL != '']" mode="attribute">		<xsl:attribute name="class">			<xsl:value-of select="substring-before(INFO/PAGETOCALL, '.php')"/>		</xsl:attribute>	</xsl:template>	<!-- -->	<!-- titres -->	<xsl:template match="MEDIA" mode="title">		<xsl:value-of select="DESCRIPTIONS/DESCRIPTION/TITLE"/>	</xsl:template>	<!-- -->	<!-- contacts -->	<xsl:template match="CONTACT" mode="country">		<xsl:value-of select="/RESPONSE/RESULTS/COUNTRY[@ID = current()/INFO/COUNTRYID]/LABEL"/>	</xsl:template>	<xsl:template match="MEDIA" mode="author">		<xsl:apply-templates select="DEPENDENCIES/DEPENDENCY[@type='Author']/CONTACT[1]" mode="author"/>	</xsl:template>	<xsl:template match="CONTACT[INFO/CONTACTTYPE = 'PM']" mode="author">		<xsl:value-of select="INFO/DENOMINATION"/>	</xsl:template>	<xsl:template match="CONTACT" mode="author">		<xsl:value-of select="INFO/FIRSTNAME"/>		<xsl:text> </xsl:text>		<xsl:value-of select="INFO/LASTNAME"/>	</xsl:template>	<xsl:template match="CONTACT" mode="title">		<xsl:apply-templates select="." mode="author"/>	</xsl:template>	<!-- -->	<!-- liens -->	<xsl:template match="MEDIA" mode="href">		<xsl:attribute name="href">			<xsl:value-of select="INFO/MEDIATYPE"/>			<xsl:text>.php?ID=</xsl:text>			<xsl:value-of select="@ID"/>		</xsl:attribute>	</xsl:template>	<xsl:template match="MEDIA[INFO/MEDIATYPE = 'Link']" mode="href">		<xsl:attribute name="href">			<xsl:value-of select="DESCRIPTIONS/DESCRIPTION/URL"/>		</xsl:attribute>	</xsl:template>	<xsl:template match="MEDIA[INFO/PAGETOCALL != '']" mode="href">		<xsl:attribute name="href">			<xsl:value-of select="INFO/PAGETOCALL"/>			<xsl:text>?ID=</xsl:text>			<xsl:value-of select="@ID"/>		</xsl:attribute>		<xsl:attribute name="title">			<xsl:apply-templates select="." mode="title"/>		</xsl:attribute>	</xsl:template>	<xsl:template match="MEDIA" mode="active"/>	<xsl:template match="MEDIA[@ID=//URL/ID]" mode="active">		<xsl:attribute name="class">active</xsl:attribute>	</xsl:template>	<xsl:template match="MEDIA" mode="link">		<a>			<xsl:apply-templates select="." mode="href"/>			<xsl:apply-templates select="." mode="active"/>			<xsl:apply-templates select="." mode="title"/>		</a>	</xsl:template>	<xsl:template match="MEDIA[INFO/MEDIATYPE = 'Link']" mode="link">		<a href="{DESCRIPTIONS/DESCRIPTION/URL}">			<xsl:apply-templates select="." mode="title"/>		</a>	</xsl:template>	<!-- -->	<!-- navigation -->	<xsl:template match="MEDIA[INFO/MEDIATYPE = 'Website']" mode="navigation_item">		<li>			<a>				<xsl:apply-templates select="." mode="href"/>				<xsl:apply-templates select="." mode="active"/>				<xsl:value-of select="//LABEL[@name='website_home']"/>			</a>		</li>	</xsl:template>	<xsl:template match="MEDIA" mode="navigation_item">		<li>			<xsl:apply-templates select="." mode="link"/>		</li>	</xsl:template>	<xsl:template match="MEDIA[INFO/MEDIATYPE='Website']" mode="navigation">		<div id="navigation">			<ul class="highlight col_9 gouttiere">				<xsl:apply-templates select="DEPENDENCIES/DEPENDENCY[@type='mediaNavigation']/MEDIA[position() &lt;= 3]" mode="navigation_highlight"/>			</ul>			<ul class="normal col_4">				<xsl:apply-templates select="DEPENDENCIES/DEPENDENCY[@type='mediaNavigation']/MEDIA[position() &gt; 3]" mode="navigation_item"/>				<!-- check -->				<!--li>More ?</li-->			</ul>			<br class="break"/>		</div>	</xsl:template>	<xsl:template name="navigation">		<xsl:apply-templates select="$website" mode="navigation"/>	</xsl:template>	<!-- -->	<!-- config details - form -->	<xsl:template match="MORE" mode="config">		<div id="{@name}" class="hidden">			<xsl:apply-templates select="*" mode="config"/>		</div>		<div id="{@name}_button">			<a class="discreet_button" href="javascript:">				<xsl:attribute name="onclick">					<xsl:text>$('#</xsl:text>					<xsl:value-of select="@name"/>					<xsl:text>').toggleClass('hidden');</xsl:text>					<xsl:text>if($('#</xsl:text>					<xsl:value-of select="@name"/>					<xsl:text>').hasClass('hidden').toString() == 'true') {$(this).text('</xsl:text>					<xsl:value-of select="//LABEL[@name='d_browse_more_criterias']"/>					<xsl:text>');} else {$(this).text('</xsl:text>					<xsl:value-of select="//LABEL[@name='d_browse_less_criterias']"/>					<xsl:text>');}</xsl:text>				</xsl:attribute>				<xsl:value-of select="//LABEL[@name='d_browse_more_criterias']"/>			</a>		</div>	</xsl:template>	<xsl:template name="form_select_country">		<xsl:param name="name"/>		<xsl:param name="selected_value"/>		<xsl:param name="first_option_label" select="//LABEL[@name='f_select_first_option_label']"/>		<xsl:param name="select_label" select="//LABEL[@name = 'country']"/>		<xsl:call-template name="form_select">			<xsl:with-param name="name" select="$name"/>			<xsl:with-param name="selected_value" select="$selected_value"/>			<xsl:with-param name="first_option_label" select="$first_option_label"/>			<xsl:with-param name="select_label" select="$select_label"/>			<xsl:with-param name="options_node" select="/RESPONSE/RESULTS/COUNTRY"/>		</xsl:call-template>	</xsl:template>	<xsl:template match="SELECT[@type='ENUM']" mode="config">		<xsl:call-template name="form_select_numbers">			<xsl:with-param name="from" select="@start"/>			<xsl:with-param name="start" select="0"/>			<xsl:with-param name="end" select="@end - @start"/>			<xsl:with-param name="name" select="@path"/>			<xsl:with-param name="selected_value" select="//URL/*[name() = current()/@path]"/>			<xsl:with-param name="first_option_label" select="//LABEL[@name='f_select_first_option_label']"/>			<xsl:with-param name="select_label">				<xsl:apply-templates select="." mode="label"/>			</xsl:with-param>			<xsl:with-param name="options_node" select="//RESULTS/*[name() = current()/@type]"/>		</xsl:call-template>	</xsl:template>	<xsl:template match="SELECT[@type='COUNTRY']" mode="config">		<xsl:call-template name="form_select">			<xsl:with-param name="name" select="@path"/>			<xsl:with-param name="selected_value" select="//URL/*[name() = current()/@path]"/>			<xsl:with-param name="first_option_label" select="//LABEL[@name='f_select_first_option_label']"/>			<xsl:with-param name="select_label">				<xsl:value-of select="//LABEL[@name = 'country']"/>			</xsl:with-param>			<xsl:with-param name="options_node" select="//RESULTS/*[name() = current()/@type]"/>		</xsl:call-template>	</xsl:template>	<xsl:template match="SELECT[@type='LIST']" mode="config">		<xsl:call-template name="form_select">			<xsl:with-param name="name" select="@path"/>			<xsl:with-param name="selected_value" select="//URL/*[name() = current()/@path]"/>			<xsl:with-param name="first_option_label" select="//LABEL[@name='f_select_first_option_label']"/>			<xsl:with-param name="select_label">				<xsl:value-of select="//LABEL[@name = current()/@path]"/>			</xsl:with-param>			<xsl:with-param name="options_node" select="//RESULTS/LIST[@name = current()/@path]"/>		</xsl:call-template>	</xsl:template>	<xsl:template match="SELECT[@type='CATEGORY']" mode="config">		<xsl:param name="selected_value" select="current()/@path"/>		<xsl:variable name="category" select="//RESULTS//CATEGORY[UNIQUENAME = current()/@path]"/>		<xsl:call-template name="form_select">			<xsl:with-param name="first_option_label" select="//LABEL[@name='f_select_first_option_label']"/>			<xsl:with-param name="name" select="@path"/>			<xsl:with-param name="selected_value" select="//URL/*[name() = $selected_value]"/>			<xsl:with-param name="select_label">				<xsl:value-of select="$category/LABEL"/>			</xsl:with-param>			<xsl:with-param name="options_node" select="$category/CATEGORY"/>		</xsl:call-template>	</xsl:template>	<xsl:template match="SELECT[@type='MEDIA']" mode="config">		<xsl:call-template name="form_select">			<xsl:with-param name="name" select="@path"/>			<xsl:with-param name="selected_value" select="//URL/*[name() = current()/@path]"/>			<xsl:with-param name="first_option_label" select="//LABEL[@name='f_select_first_option_label']"/>			<xsl:with-param name="select_label">				<xsl:value-of select="//LABEL[@name = current()/@path]"/>			</xsl:with-param>			<xsl:with-param name="options_node" select="//RESULTS[@name = current()/@path]/MEDIA"/>		</xsl:call-template>	</xsl:template>	<xsl:template match="DATA" mode="config">		<xsl:variable name="value">			<xsl:apply-templates select="." mode="value"/>		</xsl:variable>		<xsl:if test="$value != ''">			<p>				<strong>					<xsl:apply-templates select="." mode="label"/>					<xsl:text>: </xsl:text>				</strong>				<xsl:value-of select="$value"/>			</p>		</xsl:if>	</xsl:template>	<xsl:template match="CONTACT | MEDIA" mode="label">		<xsl:apply-templates select="." mode="title"/>	</xsl:template>	<xsl:template match="*[@type='CATEGORY']" mode="label">		<xsl:value-of select="/RESPONSE/RESULTS//CATEGORY[UNIQUENAME = current()/@path]/LABEL"/>	</xsl:template>	<xsl:template match="*[@type='ENUM']" mode="label">		<xsl:choose>			<xsl:when test="//LABEL[@name= current()/@path]">				<xsl:value-of select="//LABEL[@name= current()/@path]"/>			</xsl:when>			<xsl:otherwise>				<xsl:value-of select="@path"/>			</xsl:otherwise>		</xsl:choose>	</xsl:template>	<xsl:template match="*[@type='MEDIA']" mode="label">		<xsl:value-of select="//LABEL[@name = current()/@path]"/>	</xsl:template>	<xsl:template match="*[@type='COUNTRY']" mode="label">		<xsl:value-of select="//LABEL[@name='country']"/>	</xsl:template>	<xsl:template match="*[@type='LIST']" mode="label">		<xsl:value-of select="//LABEL[@name=current()/@path]"/>	</xsl:template>	<xsl:template match="GROUP" mode="label">		<xsl:value-of select="@class"/>	</xsl:template>	<xsl:template match="DATA[@type='CATEGORY']" mode="value">		<xsl:variable name="path" select="current()/@path"/>		<xsl:for-each select="//CATEGORIES/CATEGORY[FATHERNAME = $path]">			<a href="">				<xsl:value-of select="LABEL"/>			</a>			<xsl:call-template name="add_coma_if_not_last"/>		</xsl:for-each>	</xsl:template>	<xsl:template match="DATA[@type='DESCRIPTION'] | DATAS" mode="label">		<xsl:variable name="label" select="current()/@label"/>		<xsl:value-of select="/RESPONSE/RESULTS/LABEL[@name=$label]"/>	</xsl:template>	<xsl:template match="DATA[@type='DESCRIPTION']" mode="value">		<xsl:value-of select="DESCRIPTIONS/DESCRIPTION//*[name() = current()/@node]"/>	</xsl:template>	<!-- -->	<!-- form and specific stuffs -->	<!--xsl:template match="MEDIA[INFO/PAGETOCALL = 'SearchContacts.php']" mode="specific">		<form name="Form{substring-before(INFO/PAGETOCALL, '.php')}" action="{INFO/PAGETOCALL}" method="get">			<input type="hidden" name="ID" value="{@ID}"/>			<input type="hidden" name="sort" value="{//URL/sort}"/>			<input type="hidden" name="browse" value="1"/>			<xsl:call-template name="form_input_text">				<xsl:with-param name="name">search</xsl:with-param>				<xsl:with-param name="value">					<xsl:choose>						<xsl:when test="not(//URL/search) or //URL/search = ''">							<xsl:value-of select="//LABEL[@name='d_search_fill_dancer_name']"/>						</xsl:when>						<xsl:otherwise>							<xsl:value-of select="//URL/search"/>						</xsl:otherwise>					</xsl:choose>				</xsl:with-param>				<xsl:with-param name="class">					<xsl:text>texte</xsl:text>					<xsl:if test="not(//URL/search) or //URL/search = ''">						<xsl:text> no_value</xsl:text>					</xsl:if>				</xsl:with-param>				<xsl:with-param name="onfocus">					<xsl:if test="not(//URL/search) or //URL/search = ''">						<xsl:text>clear_field_content('search');</xsl:text>					</xsl:if>				</xsl:with-param>				<xsl:with-param name="onblur">					<xsl:text>no_value_field_content("search", "</xsl:text>					<xsl:value-of select="//LABEL[@name='d_search_fill_dancer_name']"/>					<xsl:text>");</xsl:text>				</xsl:with-param>			</xsl:call-template>			<xsl:apply-templates select="." mode="button"/>		</form>	</xsl:template-->	<!--xsl:template match="MEDIA[INFO/PAGETOCALL = 'BrowseContacts.php']" mode="specific">		<form name="Form{substring-before(INFO/PAGETOCALL, '.php')}" action="{INFO/PAGETOCALL}" method="get">			<input type="hidden" name="ID" value="{@ID}"/>			<input type="hidden" name="sort" value="{//URL/sort}"/>			<input type="hidden" name="browse" value="1"/>			<xsl:apply-templates select="/RESPONSE/CONFIG/FORM[@name='BrowseContacts']/*" mode="config"/>			<xsl:apply-templates select="." mode="button"/>			<br class="break"/>		</form>		<br class="break"/>	</xsl:template-->	<xsl:template match="FORM" mode="config">		<xsl:apply-templates select="*" mode="config"/>	</xsl:template>	<!-- -->	<!-- tools navigation -->	<xsl:template name="tools_navigation">		<xsl:apply-templates select="/RESPONSE/RESULTS/LIST[@name='admin_navigation']" mode="tools_nav"/>	</xsl:template>	<xsl:template match="LIST" mode="tools_nav">		<div id="tools">			<ul>				<xsl:apply-templates select="ITEM" mode="tools_nav"/>			</ul>		</div>	</xsl:template>	<xsl:template match="ITEM" mode="tools_nav">		<li id="{@value}_container" class="tool_nav">			<a href="#" onclick="tool_nav_toggle_display('{@value}');">				<xsl:value-of select="@label"/>			</a>			<form name="{@value}" id="{@value}" action="{//NECTIL/this_script}" method="get" class="hidden tool">				<input type="hidden" name="ID" value="{//URL/ID}"/>				<input type="hidden" name="sort" value="{//URL/sort}"/>				<input type="hidden" name="order" value="{//URL/order}"/>				<input type="hidden" name="{@value}" value="1"/>				<xsl:apply-templates select="." mode="specific"/>			</form>		</li>	</xsl:template>	<xsl:template match="ITEM[(@value='display' or @value='search') and //NECTIL/this_script = 'BooksExport.php']" mode="tools_nav"/>	<xsl:template match="ITEM[@value='search']" mode="specific">		<xsl:call-template name="form_input_text">			<xsl:with-param name="name" select="'search'"/>			<xsl:with-param name="value" select="//URL/search"/>			<xsl:with-param name="label" select="//LABEL[@name='f_search']"/>		</xsl:call-template>		<xsl:apply-templates select="." mode="button"/>	</xsl:template>	<xsl:template match="ITEM[@value='browse']" mode="specific">		<xsl:apply-templates select="/RESPONSE/CONFIG/FORM" mode="config"/>		<xsl:apply-templates select="." mode="button"/>	</xsl:template>	<xsl:template match="ITEM[@value='display']" mode="specific">		<xsl:apply-templates select="/RESPONSE/DISPLAY" mode="display_options"/>	</xsl:template>	<!-- -->	<!-- boutons des formulaires -->	<xsl:template match="MEDIA | ITEM" mode="button">		<div class="input_button_container">			<input type="submit" class="button" value="send"/>		</div>	</xsl:template>	<!-- -->	<!-- médias in content -->	<xsl:template match="MEDIA" mode="in_content">		<div>			<xsl:apply-templates select="." mode="attribute"/>			<xsl:apply-templates select="." mode="h2"/>			<xsl:apply-templates select="." mode="specific"/>		</div>	</xsl:template>	<!-- -->	<!-- textes -->	<xsl:template match="MEDIA" mode="h1">		<h1>			<xsl:apply-templates select="." mode="title"/>		</h1>	</xsl:template>	<xsl:template match="MEDIA" mode="h2">		<h2>			<xsl:apply-templates select="." mode="title"/>		</h2>	</xsl:template>	<xsl:template match="MEDIA" mode="h3">		<h3>			<xsl:apply-templates select="." mode="title"/>		</h3>	</xsl:template>	<xsl:template match="MEDIA" mode="h4">		<h4>			<xsl:apply-templates select="." mode="title"/>		</h4>	</xsl:template>	<xsl:template match="MEDIA" mode="body">		<xsl:apply-templates select="DESCRIPTIONS/DESCRIPTION/BODY/CSS" mode="css"/>	</xsl:template>	<xsl:template match="MEDIA" mode="header">		<xsl:apply-templates select="DESCRIPTIONS/DESCRIPTION/HEADER/CSS" mode="css">			<xsl:with-param name="class">header</xsl:with-param>		</xsl:apply-templates>	</xsl:template>	<xsl:template match="CSS" mode="css">		<div class="styled_text">			<xsl:apply-templates select="*"/>		</div>	</xsl:template>	<!-- -->	<!-- texte stylé -->	<xsl:template match="CSS//*">		<xsl:choose>			<xsl:when test="name(.)='nectil_url' and not(@pagetocall)">				<a href="{@mediatype}.php?ID={@ID}" class="{@class}">					<xsl:value-of select="."/>				</a>			</xsl:when>			<xsl:when test="name(.)='nectil_url' and @pagetocall">				<a href="{@pagetocall}?ID={@ID}" class="{@class}">					<xsl:value-of select="."/>				</a>			</xsl:when>			<xsl:otherwise>				<xsl:element name="{local-name()}">					<xsl:copy-of select="./@*"/>					<xsl:apply-templates/>				</xsl:element>			</xsl:otherwise>		</xsl:choose>	</xsl:template>	<!-- Galeries -->	<!-- -->	<xsl:template match="FILE" mode="tools">		<div class="file_tools">			<a href="{$files}{@path}" target="_blank">				<xsl:value-of select="//LABEL[@name='download_file']"/>			</a>		</div>	</xsl:template>	<xsl:template match="MEDIA[INFO/PAGETOCALL = 'Galleries.php']" mode="specific">		<div id="specific">			<xsl:apply-templates select="." mode="attribute"/>			<xsl:apply-templates select="DEPENDENCIES/DEPENDENCY[@type='mediaContent']/MEDIA" mode="in_galleries"/>		</div>	</xsl:template>	<xsl:template match="MEDIA" mode="in_galleries">		<div id="m_{@ID}">			<xsl:apply-templates select="." mode="attribute"/>			<xsl:apply-templates select="." mode="h3"/>			<xsl:apply-templates select="DESCRIPTIONS/DESCRIPTION/CUSTOM/VISUAL_FOLDER" mode="visual_folder"/>		</div>	</xsl:template>	<xsl:template match="VISUAL_FOLDER" mode="visual_folder">		<xsl:param name="name" select="."/>		<xsl:for-each select="../TREE[@path = $name]/FILE">			<xsl:sort select="@shortname" data-type="text" order="ascending"/>			<div id="img_{ancestor::MEDIA/@ID}_{@shortname}" class="img_container">				<xsl:apply-templates select="." mode="visual_proportion">					<xsl:with-param name="visual" select="@path"/>					<xsl:with-param name="height" select="100"/>					<xsl:with-param name="proportion" select=" @width div @height"/>					<xsl:with-param name="alt">						<xsl:apply-templates select="ancestor::MEDIA" mode="title"/>					</xsl:with-param>				</xsl:apply-templates>				<xsl:apply-templates select="." mode="tools"/>			</div>		</xsl:for-each>	</xsl:template>	<!-- images -->	<!-- -->	<xsl:template match="*" mode="visual_proportion">		<xsl:param name="visual">			<xsl:value-of select="DESCRIPTIONS/DESCRIPTION/CUSTOM/VISUAL"/>		</xsl:param>		<xsl:param name="width"/>		<xsl:param name="height"/>		<xsl:param name="alt">			<xsl:apply-templates select="." mode="title"/>		</xsl:param>		<xsl:param name="proportion" select="DESCRIPTIONS/DESCRIPTION/CUSTOM/VISUAL/@width div DESCRIPTIONS/DESCRIPTION/CUSTOM/VISUAL/@height"/>		<xsl:choose>			<xsl:when test="$proportion &gt; 1.5">				<xsl:call-template name="image">					<xsl:with-param name="width" select="$width"/>					<xsl:with-param name="visual" select="$visual"/>					<xsl:with-param name="alt" select="$alt"/>				</xsl:call-template>			</xsl:when>			<xsl:otherwise>				<xsl:call-template name="image">					<xsl:with-param name="height" select="$height"/>					<xsl:with-param name="visual" select="$visual"/>					<xsl:with-param name="alt" select="$alt"/>				</xsl:call-template>			</xsl:otherwise>		</xsl:choose>	</xsl:template>	<xsl:template match="MEDIA" mode="visual">		<xsl:param name="width"/>		<xsl:param name="height"/>		<xsl:param name="visual">			<xsl:value-of select="DESCRIPTIONS/DESCRIPTION/CUSTOM/VISUAL"/>		</xsl:param>		<xsl:variable name="alt">			<xsl:apply-templates select="." mode="title"/>		</xsl:variable>		<xsl:if test="$visual != ''">			<xsl:call-template name="image">				<xsl:with-param name="width" select="$width"/>				<xsl:with-param name="height" select="$height"/>				<xsl:with-param name="visual" select="$visual"/>				<xsl:with-param name="alt" select="$alt"/>			</xsl:call-template>		</xsl:if>	</xsl:template>	<xsl:template name="image">		<xsl:param name="width">200</xsl:param>		<xsl:param name="height"/>		<xsl:param name="alt"/>		<xsl:param name="visual"/>		<xsl:param name="class"/>		<xsl:param name="img_id"/>		<img>			<xsl:attribute name="src">				<xsl:value-of select="$public"/>				<xsl:text>img_resize.php?path=</xsl:text>				<xsl:value-of select="$visual"/>				<xsl:choose>					<xsl:when test="$height != ''">						<xsl:text>&amp;height=</xsl:text>						<xsl:value-of select="$height"/>					</xsl:when>					<xsl:otherwise>						<xsl:text>&amp;width=</xsl:text>						<xsl:value-of select="$width"/>					</xsl:otherwise>				</xsl:choose>			</xsl:attribute>			<xsl:attribute name="alt">				<xsl:value-of select="$alt"/>			</xsl:attribute>			<xsl:if test="$class != ''">				<xsl:attribute name="class">					<xsl:value-of select="$class"/>				</xsl:attribute>			</xsl:if>			<xsl:if test="$img_id != ''">				<xsl:attribute name="id">					<xsl:value-of select="$img_id"/>				</xsl:attribute>			</xsl:if>		</img>	</xsl:template>	<xsl:template match="CSS//img[@class='image']">		<xsl:element name="{local-name()}">			<xsl:copy-of select="@*"/>			<xsl:apply-templates select="@style"/>			<xsl:choose>				<xsl:when test="@height != ''">					<xsl:apply-templates select="@src">						<xsl:with-param name="height" select="@height"/>					</xsl:apply-templates>				</xsl:when>				<xsl:otherwise>					<xsl:apply-templates select="@src">						<xsl:with-param name="width" select="@width"/>					</xsl:apply-templates>				</xsl:otherwise>			</xsl:choose>			<xsl:apply-templates select="@width"/>			<xsl:apply-templates select="@height"/>			<xsl:apply-templates/>		</xsl:element>	</xsl:template>	<xsl:template match="CSS//img[@class='image']/@src">		<xsl:param name="width" select="284"/>		<xsl:param name="height" select="284"/>		<xsl:attribute name="src">			<xsl:text>img_resize.php?path=</xsl:text>			<xsl:value-of select="substring-after(.,//NECTIL/files_url)"/>			<xsl:text>&amp;</xsl:text>			<xsl:choose>				<xsl:when test="$height != ''">					<xsl:text>height=</xsl:text>				</xsl:when>				<xsl:otherwise>					<xsl:text>width=</xsl:text>				</xsl:otherwise>			</xsl:choose>			<xsl:value-of select="substring-before($width, 'px')"/>		</xsl:attribute>	</xsl:template>	<xsl:template match="CSS//img[@class='image']/@style">		<xsl:attribute name="style">			<xsl:choose>				<xsl:when test=". = 'float:left;'">					<xsl:value-of select="."/>					<xsl:text> margin:6px 20px 6px 0;</xsl:text>				</xsl:when>				<xsl:when test=". = 'float:right;'">					<xsl:value-of select="."/>					<xsl:text> margin:6px 0 6px 20px;</xsl:text>				</xsl:when>				<xsl:otherwise>					<xsl:value-of select="."/>				</xsl:otherwise>			</xsl:choose>		</xsl:attribute>	</xsl:template>	<xsl:template match="CSS//img[@class='image']/@width"/>	<xsl:template match="CSS//img[@class='image']/@height"/>	<!-- -->	<!-- date -->	<xsl:template name="day">		<xsl:param name="date"/>		<xsl:choose>			<xsl:when test="substring($date,9,1) = 0">				<xsl:value-of select="substring($date,10,1)"/>			</xsl:when>			<xsl:otherwise>				<xsl:value-of select="substring($date,9,2)"/>			</xsl:otherwise>		</xsl:choose>	</xsl:template>	<xsl:template name="date_hour">		<xsl:param name="date"/>		<xsl:call-template name="date">			<xsl:with-param name="date" select="$date"/>		</xsl:call-template>		<xsl:text> </xsl:text>		<xsl:value-of select="//LABEL[@name='between_date_and_hour']"/>		<xsl:text> </xsl:text>		<xsl:value-of select="substring($date, 12, 5)"/>	</xsl:template>	<xsl:template name="date">		<xsl:param name="date"/>		<xsl:call-template name="day">			<xsl:with-param name="date">				<xsl:value-of select="$date"/>			</xsl:with-param>		</xsl:call-template>		<xsl:text>/</xsl:text>		<xsl:value-of select="substring($date,6,2)"/>		<xsl:text>/</xsl:text>		<xsl:value-of select="substring($date,1,4)"/>	</xsl:template>	<xsl:template name="dates">		<xsl:param name="start" select="INFO/EVENTSTART"/>		<xsl:param name="end" select="INFO/EVENTEND"/>		<xsl:choose>			<xsl:when test="substring($end,1,4) = 0000">				<xsl:call-template name="date">					<xsl:with-param name="date">						<xsl:value-of select="$start"/>					</xsl:with-param>				</xsl:call-template>			</xsl:when>			<xsl:when test="substring($start,1,4) != substring($end,1,4)">				<xsl:call-template name="date_hour">					<xsl:with-param name="date">						<xsl:value-of select="$start"/>					</xsl:with-param>				</xsl:call-template>				<xsl:text> - </xsl:text>				<xsl:call-template name="date_hour">					<xsl:with-param name="date">						<xsl:value-of select="$end"/>					</xsl:with-param>				</xsl:call-template>			</xsl:when>			<xsl:when test="substring($start,6,2) != substring($end,6,2)">				<xsl:call-template name="day">					<xsl:with-param name="date">						<xsl:value-of select="$start"/>					</xsl:with-param>				</xsl:call-template>				<xsl:text> </xsl:text>				<xsl:value-of select="translate(/RESPONSE/RESULTS/MONTH[@ID = substring($start,6,2)]/LABEL, $majuscules,$minuscules)"/>				<xsl:text> - </xsl:text>				<xsl:call-template name="day">					<xsl:with-param name="date">						<xsl:value-of select="$end"/>					</xsl:with-param>				</xsl:call-template>				<xsl:text> </xsl:text>				<xsl:value-of select="translate(/RESPONSE/RESULTS/MONTH[@ID = substring($start,6,2)]/LABEL, $majuscules,$minuscules)"/>				<xsl:text> </xsl:text>				<xsl:value-of select="substring($start,1,4)"/>			</xsl:when>			<xsl:when test="substring($start,9,2) != substring($end,9,2)">				<xsl:call-template name="day">					<xsl:with-param name="date">						<xsl:value-of select="$start"/>					</xsl:with-param>				</xsl:call-template>				<xsl:choose>					<xsl:when test="substring($start,9,2) = substring($end,9,2) - 1">						<xsl:text> + </xsl:text>					</xsl:when>					<xsl:otherwise>						<xsl:text> → </xsl:text>					</xsl:otherwise>				</xsl:choose>				<xsl:call-template name="day">					<xsl:with-param name="date">						<xsl:value-of select="$end"/>					</xsl:with-param>				</xsl:call-template>				<xsl:text>-</xsl:text>				<xsl:value-of select="substring($start,6,2)"/>				<!--xsl:value-of	select="translate(/RESPONSE/RESULTS/MONTH[@ID = substring($start,6,2)]/LABEL, $majuscules,$minuscules)"/-->				<xsl:text>-</xsl:text>				<xsl:value-of select="substring($start,1,4)"/>			</xsl:when>			<xsl:otherwise>				<xsl:call-template name="date_hour">					<xsl:with-param name="date">						<xsl:value-of select="$start"/>					</xsl:with-param>				</xsl:call-template>			</xsl:otherwise>		</xsl:choose>	</xsl:template>	<!-- -->	<!-- éléments de formulaire -->	<xsl:template name="form_captcha">		<xsl:param name="label" select="//LABEL[@name='f_captcha']"/>		<xsl:param name="name">visitor-guess</xsl:param>		<xsl:param name="mandatory" select="1"/>		<xsl:param name="more_info"/>		<div class="captcha_container">			<label for="{$name}">				<xsl:value-of select="$label"/>				<xsl:call-template name="check_mandatory">					<xsl:with-param name="mandatory" select="$mandatory"/>				</xsl:call-template>			</label>			<div class="img_captcha">				<!--img src="captcha.php" alt="{$label}" class="captcha"/-->				<img src="{//NECTIL/files_url}{/RESPONSE/RESULTS/CAPTCHA}" alt="{$label}" class="captcha"/>			</div>			<input type="text" id="{$name}" name="{$name}" class="texte"/>			<xsl:if test="$more_info != ''">				<dfn>					<xsl:value-of select="$more_info"/>				</dfn>			</xsl:if>			<br class="break"/>		</div>	</xsl:template>	<xsl:template name="form_input_text">		<xsl:param name="label"/>		<xsl:param name="value"/>		<xsl:param name="class">texte</xsl:param>		<xsl:param name="type">text</xsl:param>		<xsl:param name="name"/>		<xsl:param name="onfocus"/>		<xsl:param name="onblur"/>		<xsl:param name="maxchars"/>		<xsl:param name="mandatory"/>		<xsl:param name="more_info"/>		<div class="input_text_container">			<label for="{$name}">				<xsl:value-of select="$label"/>				<xsl:call-template name="check_mandatory">					<xsl:with-param name="mandatory" select="$mandatory"/>				</xsl:call-template>			</label>			<input type="{$type}" id="{$name}" name="{$name}" value="{$value}" maxlength="{$maxchars}">				<xsl:if test="$onblur != ''">					<xsl:attribute name="onblur">						<xsl:value-of select="$onblur"/>					</xsl:attribute>				</xsl:if>				<xsl:if test="$onfocus != ''">					<xsl:attribute name="onfocus">						<xsl:value-of select="$onfocus"/>					</xsl:attribute>				</xsl:if>				<xsl:attribute name="class">					<xsl:value-of select="$class"/>					<xsl:if test="$mandatory = 1">						<xsl:text> mandatory</xsl:text>					</xsl:if>				</xsl:attribute>			</input>			<xsl:if test="$more_info != ''">				<dfn>					<xsl:value-of select="$more_info"/>				</dfn>			</xsl:if>			<br class="break"/>		</div>	</xsl:template>	<xsl:template name="form_textarea">		<xsl:param name="label"/>		<xsl:param name="onclick"/>		<xsl:param name="onfocus"/>		<xsl:param name="value"/>		<xsl:param name="class">texte</xsl:param>		<xsl:param name="name"/>		<xsl:param name="maxchars"/>		<xsl:param name="mandatory"/>		<div class="textarea_container">			<xsl:if test="$label != ''">				<label for="{$name}">					<xsl:value-of select="$label"/>					<xsl:call-template name="check_mandatory">						<xsl:with-param name="mandatory" select="$mandatory"/>					</xsl:call-template>				</label>			</xsl:if>			<!--br/-->			<textarea id="{$name}" name="{$name}" rows="" cols="">				<xsl:if test="$onclick != ''">					<xsl:attribute name="onclick">						<xsl:value-of select="$onclick"/>					</xsl:attribute>				</xsl:if>				<xsl:if test="$maxchars != ''">					<xsl:attribute name="maxlength">						<xsl:value-of select="$maxchars"/>					</xsl:attribute>				</xsl:if>				<xsl:if test="$onfocus != ''">					<xsl:attribute name="onfocus">						<xsl:value-of select="$onfocus"/>					</xsl:attribute>				</xsl:if>				<xsl:attribute name="class">					<xsl:value-of select="$class"/>					<xsl:if test="$mandatory = 1">						<xsl:text> mandatory</xsl:text>					</xsl:if>				</xsl:attribute>				<xsl:value-of select="$value"/>			</textarea>			<!--br class="break"/-->		</div>	</xsl:template>	<xsl:template name="form_select_option">		<xsl:param name="selected_value"/>		<xsl:param name="label"/>		<xsl:param name="value"/>		<option value="{$value}">			<xsl:if test="$value = $selected_value">				<xsl:attribute name="selected"/>			</xsl:if>			<xsl:value-of select="$label"/>		</option>	</xsl:template>	<xsl:template match="LABEL" mode="select_option">		<xsl:param name="selected_value"/>		<xsl:call-template name="form_select_option">			<xsl:with-param name="selected_value" select="$selected_value"/>			<xsl:with-param name="label" select="."/>			<xsl:with-param name="value" select="."/>		</xsl:call-template>	</xsl:template>	<xsl:template match="COUNTRY" mode="select_option">		<xsl:param name="selected_value"/>		<xsl:call-template name="form_select_option">			<xsl:with-param name="selected_value" select="$selected_value"/>			<xsl:with-param name="label" select="LABEL"/>			<xsl:with-param name="value" select="@ID"/>		</xsl:call-template>	</xsl:template>	<xsl:template match="CATEGORY" mode="select_option">		<xsl:param name="selected_value"/>		<xsl:call-template name="form_select_option">			<xsl:with-param name="selected_value" select="$selected_value"/>			<xsl:with-param name="label">				<xsl:if test="@depth = 4">					<xsl:text> - </xsl:text>				</xsl:if>				<xsl:value-of select="LABEL"/>			</xsl:with-param>			<xsl:with-param name="value" select="@path"/>		</xsl:call-template>		<xsl:apply-templates select="CATEGORY" mode="select_option">			<xsl:with-param name="selected_value" select="$selected_value"/>		</xsl:apply-templates>	</xsl:template>	<xsl:template match="ITEM" mode="select_option">		<xsl:param name="selected_value"/>		<xsl:call-template name="form_select_option">			<xsl:with-param name="selected_value" select="$selected_value"/>			<xsl:with-param name="label" select="@label"/>			<xsl:with-param name="value" select="@value"/>		</xsl:call-template>	</xsl:template>	<xsl:template match="E" mode="select_option">		<xsl:param name="selected_value"/>		<xsl:param name="from"/>		<xsl:param name="start"/>		<xsl:param name="end"/>		<xsl:if test=". &gt;= $start and . &lt;= $end ">			<xsl:variable name="result">				<xsl:value-of select="$from + ."/>			</xsl:variable>			<xsl:call-template name="form_select_option">				<xsl:with-param name="selected_value" select="$selected_value"/>				<xsl:with-param name="label" select="$result"/>				<xsl:with-param name="value" select="$result"/>			</xsl:call-template>		</xsl:if>	</xsl:template>	<xsl:template name="form_select">		<xsl:param name="name"/>		<xsl:param name="mandatory"/>		<xsl:param name="select_label"/>		<xsl:param name="first_option_label"/>		<xsl:param name="first_option_value"/>		<xsl:param name="options_node"/>		<xsl:param name="selected_value"/>		<xsl:param name="from"/>		<xsl:param name="start"/>		<xsl:param name="end"/>		<div class="select_container">			<label for="{$name}">				<!--span class="position">					<xsl:value-of select="position()"/>					<xsl:text>. </xsl:text>				</span-->				<xsl:value-of select="$select_label"/>				<xsl:call-template name="check_mandatory">					<xsl:with-param name="mandatory" select="$mandatory"/>				</xsl:call-template>			</label>			<!--br/-->			<select name="{$name}" id="{$name}">				<xsl:if test="$mandatory = 1">					<xsl:attribute name="class">mandatory</xsl:attribute>				</xsl:if>				<xsl:if test="$first_option_label != ''">					<option value="{$first_option_value}">						<xsl:value-of select="$first_option_label"/>					</option>				</xsl:if>				<xsl:apply-templates select="$options_node" mode="select_option">					<xsl:with-param name="selected_value" select="$selected_value"/>					<xsl:with-param name="from" select="$from"/>					<xsl:with-param name="start" select="$start"/>					<xsl:with-param name="end" select="$end"/>				</xsl:apply-templates>			</select>			<br class="break"/>		</div>	</xsl:template>	<xsl:template name="form_radio">		<xsl:param name="label"/>		<xsl:param name="value"/>		<xsl:param name="aID"/>		<xsl:param name="name"/>		<xsl:param name="mandatory"/>		<input type="radio" id="{$aID}" name="{$name}" value="{$value}"/>		<label for="{$aID}">			<xsl:value-of select="$label"/>			<xsl:call-template name="check_mandatory"/>		</label>	</xsl:template>	<xsl:template name="form_select_locations">		<xsl:param name="selected_value"/>		<xsl:param name="name"/>		<xsl:call-template name="form_select">			<xsl:with-param name="name" select="$name"/>			<xsl:with-param name="mandatory" select="1"/>			<xsl:with-param name="select_label" select="//LABEL[@name='city']"/>			<xsl:with-param name="first_option_label" select="//LABEL[@name='select_answer']"/>			<xsl:with-param name="first_option_value">null</xsl:with-param>			<xsl:with-param name="options_node" select="/RESPONSE/RESULTS[@name='localites']/LIST/ITEM"/>			<xsl:with-param name="selected_value" select="$selected_value"/>		</xsl:call-template>	</xsl:template>	<xsl:template name="form_select_numbers">		<xsl:param name="start"/>		<xsl:param name="from"/>		<xsl:param name="end"/>		<xsl:param name="name"/>		<xsl:param name="mandatory"/>		<xsl:param name="select_label"/>		<xsl:param name="first_option_label"/>		<xsl:param name="first_option_value"/>		<xsl:param name="options_node" select="/RESPONSE/RESULTS/ENUM/E[. &gt;= $start and . &lt;= $end]"/>		<xsl:param name="selected_value"/>		<xsl:call-template name="form_select">			<xsl:with-param name="name" select="$name"/>			<xsl:with-param name="mandatory" select="$mandatory"/>			<xsl:with-param name="select_label" select="$select_label"/>			<xsl:with-param name="first_option_label" select="$first_option_label"/>			<xsl:with-param name="first_option_value" select="$first_option_value"/>			<xsl:with-param name="options_node" select="$options_node"/>			<xsl:with-param name="selected_value" select="$selected_value"/>			<xsl:with-param name="from" select="$from"/>			<xsl:with-param name="start" select="$start"/>			<xsl:with-param name="end" select="$end"/>		</xsl:call-template>	</xsl:template>	<xsl:template name="check_mandatory">		<xsl:param name="mandatory"/>		<xsl:if test="$mandatory = 1">			<small class="mandatory" title="{//LABEL[@name='mandatory']}">*</small>		</xsl:if>	</xsl:template>	<xsl:template name="check_mandatory_class">		<xsl:param name="mandatory"/>		<xsl:if test="$mandatory = 1">			<xsl:attribute name="class">mandatory</xsl:attribute>		</xsl:if>	</xsl:template>	<!-- -->	<!-- search details -->	<xsl:template match="URL" mode="search_details">		<xsl:param name="form_name" select="/RESPONSE/CONFIG/FORM/@name"/>		<xsl:param name="mediatype" select="/RESPONSE/DISPLAY/@mediatype"/>		<xsl:param name="module">			<xsl:choose>				<xsl:when test="$mediatype != ''">					<xsl:value-of select="$mediatype"/>				</xsl:when>				<xsl:otherwise>					<xsl:value-of select="/RESPONSE/DISPLAY/@module"/>				</xsl:otherwise>			</xsl:choose>		</xsl:param>		<xsl:variable name="elements_found" select="concat($module, '_found')"/>		<xsl:variable name="hits" select="/RESPONSE/RESULTS[@name='data']/@hits"/>		<xsl:variable name="item" select="count(/RESPONSE/RESULTS[@name='data']/MEDIA)"/>		<xsl:variable name="pages" select="/RESPONSE/RESULTS[@name='data']/@pages"/>		<div class="browser_tools col_8" id="search_details">			<ul>				<li class="title">					<xsl:value-of select="//LABEL[@name='f_search_criterias']"/>				</li>				<xsl:if test="//URL/search != ''">					<li>						<xsl:value-of select="//URL/search"/>					</li>				</xsl:if>				<xsl:for-each select="*">					<xsl:variable name="var_name" select="name()"/>					<xsl:variable name="var_value" select="."/>					<xsl:for-each select="/RESPONSE/CONFIG/FORM[@name = $form_name]//*[@path = $var_name]">						<xsl:if test="$var_value != ''">							<li>								<xsl:apply-templates select="." mode="label"/>								<xsl:text>: </xsl:text>								<xsl:choose>									<xsl:when test="@type='CATEGORY'">										<xsl:value-of select="(//CATEGORY[@path = $var_value]/LABEL) [1]"/>									</xsl:when>									<xsl:when test="@type='LIST'">										<xsl:value-of select="(//LIST/ITEM[@value = $var_value]/@label) [1]"/>									</xsl:when>									<xsl:when test="@type='COUNTRY'">										<xsl:value-of select="(//COUNTRY[@ID = $var_value]/LABEL) [1]"/>									</xsl:when>									<xsl:otherwise>										<xsl:value-of select="//URL/*[name() = current()/@path]"/>									</xsl:otherwise>								</xsl:choose>							</li>						</xsl:if>					</xsl:for-each>				</xsl:for-each>			</ul>			<ul>				<li class="title">					<xsl:if test="$hits != $item">						<xsl:value-of select="$item"/>						<xsl:text>/</xsl:text>					</xsl:if>					<xsl:value-of select="$hits"/>					<xsl:text> </xsl:text>					<xsl:value-of select="//LABEL[@name=$elements_found]"/>				</li>				<xsl:if test="$pages &gt; 1">					<li>Pages </li>					<xsl:for-each select="/RESPONSE/RESULTS/ENUM/E[ . &lt;= $pages and . &gt;= 1 ]">						<li>							<a>								<xsl:attribute name="href">									<xsl:value-of select="//NECTIL/this_script"/>									<xsl:text>?</xsl:text>									<xsl:for-each select="/RESPONSE/URL/*[name() != 'page' and . != '' and name() != 'language']">										<xsl:value-of select="concat(name(),'=',.)"/>										<xsl:text>&amp;</xsl:text>									</xsl:for-each>									<xsl:value-of select="concat('page=', .)"/>								</xsl:attribute>								<xsl:value-of select="."/>							</a>						</li>					</xsl:for-each>				</xsl:if>				<li>									</li>				<xsl:if test="$hits &gt; 0">					<li>						<a href="#" onclick="generate_{$module}_CSV();">							<xsl:value-of select="//LABEL[@name='download_listing']"/>						</a>					</li>				</xsl:if>			</ul>		</div>	</xsl:template>	<!-- -->	<!-- pagination -->	<xsl:template match="RESULTS" mode="pagination">		<xsl:if test="@pages &gt; 1">			<xsl:variable name="base_link">				<xsl:value-of select="//NECTIL/this_script"/>				<xsl:text>?</xsl:text>				<xsl:for-each select="//URL/*[name() != 'now' and name() != 'language' and name() != 'page']">					<xsl:value-of select="name()"/>					<xsl:text>=</xsl:text>					<xsl:value-of select="."/>					<xsl:text>&amp;</xsl:text>				</xsl:for-each>			</xsl:variable>			<div class="browser_tools col_8">				<ul>					<li class="title">						<xsl:value-of select="//LABEL[@name='pages']"/>					</li>					<xsl:if test="@page &gt; 1">						<li>							<a href="{$base_link}page={@page - 1}">								<xsl:text>Previous</xsl:text>							</a>						</li>					</xsl:if>					<xsl:for-each select="/RESPONSE/RESULTS/ENUM/E[. &lt;= current()/@pages]">						<li>							<a href="{$base_link}page={.}">								<xsl:if test=". = //URL/page">									<xsl:attribute name="class">active</xsl:attribute>								</xsl:if>								<xsl:value-of select="."/>							</a>						</li>					</xsl:for-each>					<xsl:if test="@page != @pages">						<li>							<a href="{$base_link}page={@page + 1}">								<xsl:text>Next</xsl:text>							</a>						</li>					</xsl:if>				</ul>			</div>		</xsl:if>	</xsl:template>	<!-- -->	<!-- construction du header -->	<!-- -->	<!-- table header -->	<xsl:template match="GROUP" mode="display_header">		<xsl:apply-templates select="*" mode="display_header"/>	</xsl:template>	<xsl:template match="UPDATE" mode="display_header">		<th> - </th>	</xsl:template>	<xsl:template match="DATA[@function='PeopleContactType']" mode="display_header">		<th>Fonction de la personne de contact</th>	</xsl:template>	<xsl:template match="DATA" mode="display_header">		<xsl:param name="target">			<xsl:choose>				<xsl:when test="@service = 'DEPENDENCY'">					<xsl:value-of select="@type"/>				</xsl:when>				<xsl:otherwise>					<xsl:value-of select="@path"/>				</xsl:otherwise>			</xsl:choose>		</xsl:param>		<xsl:param name="class" select="concat(../@class, ' ', $target)"/>		<th>			<xsl:if test="$class != ''">				<xsl:attribute name="class">					<xsl:value-of select="$class"/>				</xsl:attribute>			</xsl:if>			<xsl:apply-templates select="." mode="sort"/>			<xsl:apply-templates select="." mode="label"/>			<xsl:if test="@function = 'length'">				<xsl:text> - longueur</xsl:text>			</xsl:if>		</th>	</xsl:template>	<!-- -->	<!-- specific element label -->	<xsl:template match="DATA" mode="label">		<xsl:value-of select="@path"/>	</xsl:template>	<xsl:template match="DATA[@service='INFO' or @service='DESCRIPTION']" mode="label">		<xsl:param name="label" select="concat('f_', @path)"/>		<xsl:choose>			<xsl:when test="//LABEL[@name=$label]">				<xsl:value-of select="//LABEL[@name=$label]"/>			</xsl:when>			<xsl:otherwise>				<xsl:value-of select="@path"/>			</xsl:otherwise>		</xsl:choose>	</xsl:template>	<xsl:template match="DATA[@service='CATEGORY']" mode="label">		<xsl:value-of select="/RESPONSE/RESULTS//CATEGORY[UNIQUENAME = current()/@path]/LABEL"/>	</xsl:template>	<xsl:template match="DATA[@service='DEPENDENCY']" mode="label">		<xsl:param name="type" select="@type"/>		<xsl:param name="label" select="//DEPENDENCYTYPE[TYPE = $type]/DENOMINATION/LABEL[@languageID = //NECTIL/language]"/>		<xsl:choose>			<xsl:when test="$label != ''">				<xsl:value-of select="$label"/>			</xsl:when>			<xsl:otherwise>				<xsl:value-of select="$type"/>			</xsl:otherwise>		</xsl:choose>	</xsl:template>	<!-- -->	<!-- specific elements sort template -->	<xsl:template match="*" mode="basic_sort">		<xsl:param name="var"/>		<xsl:param name="type" select="@data-type"/>		<xsl:variable name="current_url">			<xsl:value-of select="//NECTIL/this_script"/>			<xsl:text>?</xsl:text>			<xsl:for-each select="//URL/*[name() != 'now' and name() != 'language' and name() != 'page' and name() != 'sort' and name() != 'order' and name() != 'type']">				<xsl:value-of select="name()"/>				<xsl:text>=</xsl:text>				<xsl:value-of select="."/>				<xsl:text>&amp;</xsl:text>			</xsl:for-each>		</xsl:variable>		<span>			<a href="{$current_url}sort={$var}&amp;order=descending&amp;type={$type}">				<img src="images/down.gif"/>			</a>			<a href="{$current_url}sort={$var}&amp;order=ascending&amp;type={$type}">				<img src="images/up.gif"/>			</a>		</span>	</xsl:template>	<xsl:template match="DATA" mode="sort"/>	<xsl:template match="DATA[@service='DESCRIPTION' or @service='INFO']" mode="sort">		<xsl:apply-templates select="." mode="basic_sort">			<xsl:with-param name="var">				<xsl:value-of select="@path"/>				<xsl:if test="@function">					<xsl:value-of select="concat('_',@function)"/>				</xsl:if>			</xsl:with-param>		</xsl:apply-templates>	</xsl:template>	<!--xsl:template match="DATA[@service='DEPENDENCY']" mode="sort">		<xsl:apply-templates select="." mode="basic_sort">			<xsl:with-param name="var">DEPENDENCY[<xsl:value-of select="@type"/>]</xsl:with-param>		</xsl:apply-templates>	</xsl:template>	<xsl:template match="DATA[@service='CATEGORY']" mode="sort">		<xsl:apply-templates select="." mode="basic_sort">			<xsl:with-param name="var">CATEGORY[<xsl:value-of select="@fatherID"/>]</xsl:with-param>		</xsl:apply-templates>	</xsl:template-->	<!-- -->	<!-- critères de tri -->	<xsl:template match="LIST" mode="sort_criterias">		<xsl:variable name="base_link">			<xsl:value-of select="//NECTIL/this_script"/>			<xsl:text>?</xsl:text>			<xsl:for-each select="//URL/*[name() != 'now' and name() != 'language' and name() != 'page' and name() != 'sort']">				<xsl:value-of select="name()"/>				<xsl:text>=</xsl:text>				<xsl:value-of select="."/>				<xsl:text>&amp;</xsl:text>			</xsl:for-each>		</xsl:variable>		<div class="browser_tools col_8">			<ul>				<li class="title">					<xsl:value-of select="//LABEL[@name='browse_dancers_sort_on']"/>				</li>				<xsl:for-each select="ITEM[@value != 'music']">					<li>						<a href="{$base_link}sort={@value}">							<xsl:if test="@value = //URL/sort">								<xsl:attribute name="class">active</xsl:attribute>							</xsl:if>							<xsl:value-of select="@label"/>						</a>					</li>				</xsl:for-each>			</ul>		</div>	</xsl:template>	<!-- -->	<!-- listing -->	<xsl:template match="MEDIA" mode="data">		<xsl:param name="current_element" select="."/>		<tr id="m{@ID}">			<xsl:apply-templates select="/RESPONSE/DISPLAY/*" mode="display_cell">				<xsl:with-param name="element" select="$current_element"/>			</xsl:apply-templates>		</tr>	</xsl:template>	<xsl:template match="CONTACT" mode="data">		<xsl:param name="current_element" select="."/>		<tr id="c{@ID}">			<xsl:apply-templates select="/RESPONSE/DISPLAY/*" mode="display_cell">				<xsl:with-param name="element" select="$current_element"/>			</xsl:apply-templates>		</tr>	</xsl:template>	<!-- -->	<!-- CELLS -->	<xsl:template match="*" mode="display_cell">		<xsl:param name="element"/>		<td>			<xsl:call-template name="add_class"/>			<xsl:apply-templates select="." mode="display_cell_content">				<xsl:with-param name="element" select="$element"/>			</xsl:apply-templates>		</td>	</xsl:template>	<xsl:template match="GROUP" mode="display_cell">		<xsl:param name="element"/>		<xsl:apply-templates select="*" mode="display_cell">			<xsl:with-param name="element" select="$element"/>		</xsl:apply-templates>	</xsl:template>	<xsl:template match="DATA[@function='PeopleContactType' and @service='DEPENDENCY']" mode="display_cell">		<xsl:param name="element"/>		<xsl:param name="pContactID" select="$element/DEPENDENCIES/DEPENDENCY[@type='BookToPeopleContact']/CONTACT/@ID"/>		<td>			<xsl:call-template name="add_class"/>			<xsl:for-each select="$element/DEPENDENCIES/DEPENDENCY[@type != 'BookToPeopleContact']">				<xsl:if test="CONTACT[@ID = $pContactID]">					<xsl:value-of select="substring-after(@type, 'BookTo')"/>					<xsl:text> - </xsl:text>				</xsl:if>			</xsl:for-each>		</td>	</xsl:template>	<xsl:template match="GROUP" mode="display_cell_content">		<xsl:param name="element"/>		<xsl:apply-templates select="*" mode="display_cell_content">			<xsl:with-param name="element" select="$element"/>		</xsl:apply-templates>	</xsl:template>	<xsl:template match="UPDATE[../@module='CONTACT']" mode="display_cell_content">		<xsl:param name="element"/>		<a href="#" onclick="display_contact('{$element/@ID}');">			<xsl:value-of select="//LABEL[@name='update']"/>		</a>	</xsl:template>	<xsl:template match="UPDATE[../@module='MEDIA']" mode="display_cell_content">		<xsl:param name="element"/>		<xsl:param name="mediatype" select="translate($element/INFO/MEDIATYPE, $majuscules, $minuscules)"/>		<a href="#" onclick="display_{$mediatype}('{$element/@ID}');">			<xsl:value-of select="//LABEL[@name='update']"/>		</a>	</xsl:template>	<xsl:template match="DATA" mode="display_cell_content">		<xsl:param name="element"/>		<xsl:comment><xsl:value-of select="@label"/>			alors		</xsl:comment>		<xsl:value-of select="$element//*[name() = current()/@path]"/>	</xsl:template>	<!--	<xsl:template match="DATA[@function='PeopleContactType' and @service='DEPENDENCY']" mode="display_cell_content">		<xsl:param name="element"/>		<xsl:param name="pContactID" select="$element/DEPENDENCIES/DEPENDENCY[@type='BookToPeopleContact']/CONTACT/@ID"/>		<xsl:value-of select="$pContactID"/>		<xsl:for-each select="$element/DEPENDENCIES/DEPENDENCY[@type != 'BookToPeopleContact']/CONTACT[@ID = $pContactID]">			<xsl:value-of select="@ID"/>			<xsl:value-of select="../DEPENDENCY/@type"/>		</xsl:for-each>	</xsl:template>	-->	<xsl:template match="DATA[@function='length']" mode="display_cell_content">		<xsl:param name="element"/>		<xsl:value-of select="string-length($element//*[name() = current()/@path])"/>	</xsl:template>	<xsl:template match="DATA[@service='CATEGORY']" mode="display_cell_content">		<xsl:param name="element"/>		<xsl:for-each select="$element/CATEGORIES//CATEGORY[contains(@path, current()/@path)]">			<xsl:value-of select="LABEL"/>			<xsl:call-template name="add_coma_if_not_last"/>		</xsl:for-each>	</xsl:template>	<xsl:template match="DATA[@service='DEPENDENCY']" mode="display_cell_content">		<xsl:param name="element"/>		<xsl:param name="dep_type" select="@type"/>		<xsl:for-each select="$element/DEPENDENCIES/DEPENDENCY[@type = $dep_type]/*">			<xsl:apply-templates select="." mode="title"/>			<xsl:if test="INFO/ADDRESS != ''">				<xsl:text> - </xsl:text>				<xsl:value-of select="INFO/ADDRESS"/>			</xsl:if>			<xsl:if test="INFO/POSTALCODE != ''">				<xsl:text> </xsl:text>				<xsl:value-of select="INFO/POSTALCODE"/>			</xsl:if>			<xsl:if test="INFO/CITY != ''">				<xsl:text> </xsl:text>				<xsl:value-of select="INFO/CITY"/>			</xsl:if>			<xsl:if test="INFO/COUNTRYID and INFO/COUNTRYID != 'bel'">				<xsl:text> (</xsl:text>				<xsl:value-of select="INFO/COUNTRYID"/>				<xsl:text>)</xsl:text>			</xsl:if>			<xsl:if test="INFO/EMAIL1 != ''">				<xsl:text> - </xsl:text>				<xsl:value-of select="INFO/EMAIL1"/>			</xsl:if>			<xsl:if test="INFO/PHONE1 != ''">				<xsl:text> - </xsl:text>				<xsl:value-of select="INFO/PHONE1"/>			</xsl:if>			<xsl:if test="INFO/MOBILEPHONE != ''">				<xsl:text> - </xsl:text>				<xsl:value-of select="INFO/MOBILEPHONE"/>			</xsl:if>			<!--			<xsl:choose>				<xsl:when test="$dep_type = 'BookToPeopleContact'">					<xsl:if test="INFO/EMAIL1 != ''">						<xsl:text> - </xsl:text>						<xsl:value-of select="INFO/EMAIL1"/>					</xsl:if>					<xsl:if test="INFO/PHONE1 != ''">						<xsl:text> - </xsl:text>						<xsl:value-of select="INFO/PHONE1"/>					</xsl:if>					<xsl:if test="INFO/MOBILEPHONE != ''">						<xsl:text> - </xsl:text>						<xsl:value-of select="INFO/MOBILEPHONE"/>					</xsl:if>				</xsl:when>				-->			<!--xsl:when test="$dep_type = 'BookToGraphist'">					<xsl:if test="INFO/DENOMINATION != '' and INFO/FIRSTNAME != ''">						<xsl:text> - </xsl:text>						<xsl:value-of select="INFO/DENOMINATION"/>					</xsl:if>				</xsl:when-->			<!--			</xsl:choose>			<xsl:if test="INFO/COUNTRYID and INFO/COUNTRYID != 'bel'">				<xsl:text> (</xsl:text>				<xsl:value-of select="INFO/COUNTRYID"/>				<xsl:text>)</xsl:text>			</xsl:if>			-->			<xsl:call-template name="add_coma_if_not_last"/>		</xsl:for-each>	</xsl:template>	<!-- -->	<!-- construction du listing -->	<xsl:template name="add_class">		<xsl:param name="class">			<xsl:if test="@path">				<xsl:value-of select="@path"/>			</xsl:if>			<xsl:if test="@type">				<xsl:value-of select="@type"/>			</xsl:if>			<xsl:if test="ancestor::GROUP">				<xsl:text> </xsl:text>				<xsl:value-of select="ancestor::GROUP/@class"/>			</xsl:if>		</xsl:param>		<xsl:if test="$class != ''">			<xsl:attribute name="class">				<xsl:value-of select="$class"/>			</xsl:attribute>		</xsl:if>	</xsl:template>	<xsl:template match="UPDATE" mode="content">		<xsl:param name="element"/>		<td>			<a href="#" onclick="display_contact('{$element/@ID}');">				<xsl:value-of select="//LABEL[@name='update']"/>			</a>		</td>	</xsl:template>	<!-- -->	<!-- display options -->	<xsl:template match="DISPLAY" mode="display_options">		<ul>			<xsl:apply-templates select="*" mode="display_options"/>		</ul>	</xsl:template>	<xsl:template match="DATA | GROUP" mode="display_options">		<xsl:param name="target">			<xsl:choose>				<xsl:when test="name() = 'GROUP'">					<xsl:value-of select="@class"/>				</xsl:when>				<xsl:when test="@service = 'DEPENDENCY'">					<xsl:value-of select="@type"/>				</xsl:when>				<xsl:otherwise>					<xsl:value-of select="@path"/>				</xsl:otherwise>			</xsl:choose>		</xsl:param>		<xsl:variable name="cbID" select="concat('d_o_', $target)"/>		<li id="cont_{$cbID}">			<input type="checkbox" name="{$cbID}" id="{$cbID}" checked="checked" onclick="toggle_display('{$target}');"/>			<label for="{$cbID}">				<xsl:apply-templates select="." mode="label"/>			</label>			<xsl:if test="name() = 'GROUP'">				<ul id="{$cbID}_subcontent">					<xsl:apply-templates select="*" mode="display_options"/>				</ul>			</xsl:if>		</li>	</xsl:template>	<!-- -->	<!-- -->	<xsl:template match="MEDIA" mode="more">		<p class="more">			<a>				<xsl:apply-templates select="." mode="href"/>				<xsl:value-of select="//LABEL[@name='read_more']"/>			</a>		</p>	</xsl:template>	<!-- -->	<!-- contenu -->	<xsl:template match="MEDIA" mode="content">		<div id="main">			<xsl:apply-templates select="." mode="h1"/>			<xsl:apply-templates select="." mode="body"/>			<xsl:apply-templates select="." mode="specific"/>			<hr class="clear"/>		</div>	</xsl:template>	<!-- -->	<!-- side navigation / content -->	<xsl:template match="MEDIA" mode="side_content">		<div id="side">			<xsl:apply-templates select="DEPENDENCIES/DEPENDENCY[@type='mediaSideContent']/MEDIA[@ID != //URL/ID]" mode="in_content"/>		</div>	</xsl:template>	<!-- -->	<!-- bottom content -->	<xsl:template match="MEDIA" mode="top">		<div id="top">			<div id="navigation" class="col_6 gouttiere">				<xsl:apply-templates select="." mode="title"/>				<ul>					<xsl:apply-templates select="DEPENDENCIES/DEPENDENCY[@type='mediaNavigation']/MEDIA" mode="navigation_item"/>				</ul>			</div>			<br class="break"/>		</div>	</xsl:template>	<!-- -->	<!-- accords -->	<xsl:template name="check_pluriel">		<xsl:param name="zero"/>		<xsl:param name="un"/>		<xsl:param name="plusieurs"/>		<xsl:param name="value"/>		<xsl:choose>			<xsl:when test="$value = 0">				<xsl:value-of select="$zero"/>			</xsl:when>			<xsl:otherwise>				<xsl:value-of select="$value"/>				<xsl:text> </xsl:text>				<xsl:choose>					<xsl:when test="$value = 1">						<xsl:value-of select="$un"/>					</xsl:when>					<xsl:otherwise>						<xsl:value-of select="$plusieurs"/>					</xsl:otherwise>				</xsl:choose>			</xsl:otherwise>		</xsl:choose>	</xsl:template>	<!-- -->	<!--fonction de titrage-->	<xsl:template name="add_br_if_not_last">		<xsl:if test="position()!=last()">			<br/>		</xsl:if>	</xsl:template>	<xsl:template name="add_coma_if_not_last">		<xsl:if test="position()!=last()">			<xsl:text>, </xsl:text>		</xsl:if>	</xsl:template>	<xsl:template name="add_space_if_not_last">		<xsl:if test="position()!=last()">			<xsl:text> </xsl:text>		</xsl:if>	</xsl:template>	<!-- -->	<!-- -->	<xsl:template name="titrage">		<xsl:param name="text"/>		<xsl:param name="color"/>		<xsl:param name="size"/>		<xsl:param name="first">true</xsl:param>		<xsl:variable name="real_text">			<xsl:value-of select="translate($text,$apos,$new_apos)"/>		</xsl:variable>		<img alt="" src="titrage.php?title={$real_text}&amp;color={$color}&amp;size={$size}">			<xsl:if test="$first='true'">				<xsl:attribute name="alt">					<xsl:value-of select="$text"/>				</xsl:attribute>			</xsl:if>		</img>	</xsl:template>	<!-- -->	<!-- lightbox -->	<xsl:template name="lightbox">		<xsl:param name="content"/>		<div id="lightbox" class="hidden">			<div id="lightbox_container">							</div>		</div>	</xsl:template></xsl:stylesheet>