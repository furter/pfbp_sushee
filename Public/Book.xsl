<?xml version="1.0"?><xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" version="1.0">	<xsl:import href="common.xsl"/>	<xsl:template match="/RESPONSE">		<xsl:call-template name="html"/>	</xsl:template>	<xsl:template match="MEDIA[INFO/MEDIATYPE='Book']" mode="content">		<div id="content">			<xsl:apply-templates select="." mode="h1"/>			<div class="info">				<xsl:apply-templates select="/RESPONSE/DISPLAY[@mode='book_basic_info']" mode="display">					<xsl:with-param name="element" select="."/>				</xsl:apply-templates>			</div>			<div class="inside_navigation">				<ul class="body_preview">					<li class="link">						<xsl:value-of select="//LABEL[@name='read_more']"/>					</li>					<xsl:apply-templates select="//LIST[@name='book_inside_navigation']/*" mode="navigation"/>				</ul>			</div>		</div>		<div id="content_details" class="hidden">			<xsl:apply-templates select="//LIST[@name='book_inside_navigation']/*" mode="content_details"/>		</div>		<xsl:apply-templates select="." mode="specific"/>	</xsl:template>	<xsl:template name="close_details">		<a onclick="close_content_details();" class="close">			<img src="images/close.png" alt="{//LABEL[@name='close']}"/>		</a>	</xsl:template>	<xsl:template match="ITEM[@value='technique']" mode="content_details">		<div id="{@value}" class="detail hidden">			<xsl:call-template name="close_details"/>			<h3>				<xsl:value-of select="//LABEL[@name='technical_file']"/>			</h3>			<xsl:apply-templates select="/RESPONSE/DISPLAY[@name='display_book_technique_file']" mode="display_details">				<xsl:with-param name="element" select="$media"/>			</xsl:apply-templates>		</div>	</xsl:template>	<xsl:template match="ITEM[@value='question']" mode="content_details">		<xsl:for-each select="$media/DESCRIPTIONS/DESCRIPTION/CUSTOM/*[starts-with(name(), 'QUESTION_') and . != '']">			<xsl:variable name="label" select="concat('book_', name())"/>			<div id="{name()}" class="detail hidden">				<xsl:call-template name="close_details"/>				<h3>					<xsl:value-of select="//LABEL[@name=$label]"/>				</h3>				<div class="styled_text">					<xsl:apply-templates select="./CSS/*"/>				</div>			</div>		</xsl:for-each>	</xsl:template>	<xsl:template match="ITEM[@value='technique']" mode="navigation">		<li>			<a href="#{@value}" onclick="display_content_detail('{@value}'); $(this).addClass('active');">				<xsl:value-of select="//LABEL[@name='technical_file']"/>			</a>		</li>	</xsl:template>	<xsl:template match="ITEM[@value='download']" mode="navigation">		<xsl:if test="//URL/press = 1">			<li class="download">				<a href="DownloadZip.php?path={$media/DESCRIPTIONS/DESCRIPTION/CUSTOM/VISUAL_FOLDER}&amp;type=folder">					<xsl:value-of select="//LABEL[@name='download_pictures']"/>				</a>			</li>		</xsl:if>	</xsl:template>	<xsl:template match="ITEM[@value='question']" mode="navigation">		<xsl:for-each select="$media/DESCRIPTIONS/DESCRIPTION/CUSTOM/*[starts-with(name(), 'QUESTION_') and . != '']">			<xsl:variable name="label" select="concat('book_', name())"/>			<li>				<a href="#{name()}" onclick="display_content_detail('{name()}'); $(this).addClass('active');">					<xsl:value-of select="//LABEL[@name=$label]"/>				</a>			</li>		</xsl:for-each>	</xsl:template>	<xsl:template match="MEDIA[INFO/MEDIATYPE='Book' and //URL/mode = 'text']" mode="content">		<div id="content">			<xsl:apply-templates select="." mode="h1"/>			<xsl:apply-templates select="." mode="body"/>		</div>		<xsl:apply-templates select="." mode="specific"/>	</xsl:template>	<xsl:template match="MEDIA" mode="specific">		<div id="specific">			<xsl:for-each select="DESCRIPTIONS/DESCRIPTION[@languageID != 'shared']/CUSTOM/TREE/FILE">				<xsl:sort select="@shortname" data-type="text" order="ascending"/>				<xsl:apply-templates select="." mode="big_preview"/>			</xsl:for-each>			<!--			<xsl:for-each select="DESCRIPTIONS/DESCRIPTION/CUSTOM/TREE/FILE">				<xsl:sort select="@name" data-type="text" order="ascending"/>				<xsl:apply-templates select="." mode="big_preview">					<xsl:with-param name="position" select="position()"/>				</xsl:apply-templates>			</xsl:for-each>			-->		</div>	</xsl:template>	<xsl:template match="MEDIA[//URL/mode = 'text']" mode="specific">		<div id="specific" class="fix">			<h4>				<xsl:value-of select="DESCRIPTIONS/DESCRIPTION/SIGNATURE"/>			</h4>			<xsl:apply-templates select="$data" mode="small_preview"/>		</div>	</xsl:template>	<!-- repris de booksexport -->	<!-- voir si crÃ©er un nouveau super template -->	<xsl:template match="DISPLAY" mode="display_details">		<xsl:param name="element"/>		<div>			<xsl:apply-templates select="*" mode="display_details">				<xsl:with-param name="element" select="$element"/>			</xsl:apply-templates>		</div>	</xsl:template>	<xsl:template match="DATA[@service='LABEL']" mode="display_details">		<xsl:param name="tag" select="@tag"/>		<xsl:element name="{$tag}">			<xsl:apply-templates select="." mode="display_label"/>		</xsl:element>	</xsl:template>	<xsl:template match="DATA[@path= 'BOOK_COPIES' or @path='INSIDE_PAGES' or @path='INSIDE_BOOKLETS' or @path='COVER_PAGES' or @path='COVER_BOOKLETS' or @path='BOOK_WEIGHT']" mode="display_details">		<xsl:param name="element"/>		<xsl:variable name="value">			<xsl:apply-templates select="." mode="display_cell_content">				<xsl:with-param name="element" select="$element"/>			</xsl:apply-templates>		</xsl:variable>		<xsl:if test="$value != ''">			<li>				<xsl:apply-templates select="." mode="display_cell_content">					<xsl:with-param name="element" select="$element"/>				</xsl:apply-templates>				<xsl:text> </xsl:text>				<xsl:apply-templates select="." mode="display_label"/>			</li>		</xsl:if>	</xsl:template>	<xsl:template match="DATA[@path='BOOK_COPIES']" mode="display_details">		<xsl:param name="element"/>		<xsl:variable name="value">			<xsl:apply-templates select="." mode="display_cell_content">				<xsl:with-param name="element" select="$element"/>			</xsl:apply-templates>		</xsl:variable>		<xsl:if test="$value != ''">			<li>				<b>					<xsl:value-of select="//LABEL[@name='book_BOOK_COPIES_title']"/>					<xsl:text>: </xsl:text>				</b>				<xsl:apply-templates select="." mode="display_cell_content">					<xsl:with-param name="element" select="$element"/>				</xsl:apply-templates>				<xsl:text> </xsl:text>				<xsl:apply-templates select="." mode="display_label"/>			</li>		</xsl:if>	</xsl:template>	<xsl:template match="*" mode="display_details">		<xsl:param name="element"/>		<xsl:variable name="value">			<xsl:apply-templates select="." mode="display_cell_content">				<xsl:with-param name="element" select="$element"/>			</xsl:apply-templates>		</xsl:variable>		<xsl:if test="$value != ''">			<li>				<b>					<xsl:apply-templates select="." mode="display_label"/>					<xsl:text>: </xsl:text>				</b>				<xsl:apply-templates select="." mode="display_cell_content">					<xsl:with-param name="element" select="$element"/>				</xsl:apply-templates>			</li>		</xsl:if>	</xsl:template>	<xsl:template match="DATA[@service='DEPENDENCY']" mode="display_label">		<xsl:variable name="label" select="concat('book_', @type)"/>		<xsl:value-of select="//LABEL[@name = $label]"/>	</xsl:template>	<xsl:template match="DATA[@service='LABEL']" mode="display_label">		<xsl:variable name="label" select="@label"/>		<xsl:value-of select="//LABEL[@name = $label]"/>	</xsl:template>	<xsl:template match="*" mode="display_label">		<xsl:variable name="label" select="concat('book_', @path)"/>		<xsl:value-of select="//LABEL[@name = $label]"/>	</xsl:template>	<xsl:template match="GROUP" mode="display_details">		<xsl:param name="element"/>		<li>			<xsl:for-each select="*">				<xsl:apply-templates select="." mode="display_cell_content">					<xsl:with-param name="element" select="$element"/>				</xsl:apply-templates>				<xsl:call-template name="add_coma_if_not_last"/>			</xsl:for-each>		</li>	</xsl:template>	<xsl:template match="GROUP/DATA[@service='LABEL']" mode="display_cell_content">		<xsl:param name="element"/>		<xsl:apply-templates select="." mode="display_label">			<xsl:with-param name="element" select="$element"/>		</xsl:apply-templates>	</xsl:template>	<xsl:template match="DATA[@service='DESCRIPTION']" mode="display_cell_content">		<xsl:param name="element"/>		<xsl:variable name="current_content" select="$element/DESCRIPTIONS/DESCRIPTION//*[name() = current()/@path]"/>		<xsl:choose>			<xsl:when test="$current_content/CSS">				<xsl:for-each select="$current_content/CSS/*">					<xsl:call-template name="add_br_if_not_last"/>					<xsl:value-of select="."/>				</xsl:for-each>			</xsl:when>			<xsl:otherwise>				<xsl:value-of select="$current_content"/>			</xsl:otherwise>		</xsl:choose>	</xsl:template>	<xsl:template match="DATA[@path= 'BOOK_TRANSLATOR']" mode="display_cell_content">		<xsl:param name="element"/>		<xsl:variable name="current_content" select="$element/DESCRIPTIONS/DESCRIPTION//*[name() = current()/@path]"/>		<xsl:for-each select="$current_content/CSS/*">			<xsl:value-of select="."/>			<xsl:call-template name="add_coma_if_not_last"/>		</xsl:for-each>	</xsl:template>	<xsl:template match="DATA[@service='DEPENDENCY']" mode="display_cell_content">		<xsl:param name="element"/>		<xsl:param name="dep_type" select="@type"/>		<xsl:for-each select="$element/DEPENDENCIES/DEPENDENCY[@type = $dep_type]/*">			<xsl:apply-templates select="." mode="title"/>			<xsl:if test="position() != last()">				<xsl:text>, </xsl:text>			</xsl:if>		</xsl:for-each>	</xsl:template></xsl:stylesheet>